#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SRemont
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SR")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDetal(Detal instance);
    partial void UpdateDetal(Detal instance);
    partial void DeleteDetal(Detal instance);
    partial void InsertGDetal(GDetal instance);
    partial void UpdateGDetal(GDetal instance);
    partial void DeleteGDetal(GDetal instance);
    partial void InsertKlient(Klient instance);
    partial void UpdateKlient(Klient instance);
    partial void DeleteKlient(Klient instance);
    partial void InsertModelUstr(ModelUstr instance);
    partial void UpdateModelUstr(ModelUstr instance);
    partial void DeleteModelUstr(ModelUstr instance);
    partial void InsertRabota(Rabota instance);
    partial void UpdateRabota(Rabota instance);
    partial void DeleteRabota(Rabota instance);
    partial void InsertSotrudnik(Sotrudnik instance);
    partial void UpdateSotrudnik(Sotrudnik instance);
    partial void DeleteSotrudnik(Sotrudnik instance);
    partial void InsertStatZakaz(StatZakaz instance);
    partial void UpdateStatZakaz(StatZakaz instance);
    partial void DeleteStatZakaz(StatZakaz instance);
    partial void InsertTipUstr(TipUstr instance);
    partial void UpdateTipUstr(TipUstr instance);
    partial void DeleteTipUstr(TipUstr instance);
    partial void InsertZakaz(Zakaz instance);
    partial void UpdateZakaz(Zakaz instance);
    partial void DeleteZakaz(Zakaz instance);
    partial void InsertZakDet(ZakDet instance);
    partial void UpdateZakDet(ZakDet instance);
    partial void DeleteZakDet(ZakDet instance);
    partial void InsertZakRab(ZakRab instance);
    partial void UpdateZakRab(ZakRab instance);
    partial void DeleteZakRab(ZakRab instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::SRemont.Properties.Settings.Default.SRConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Detal> Detal
		{
			get
			{
				return this.GetTable<Detal>();
			}
		}
		
		public System.Data.Linq.Table<GDetal> GDetal
		{
			get
			{
				return this.GetTable<GDetal>();
			}
		}
		
		public System.Data.Linq.Table<Klient> Klient
		{
			get
			{
				return this.GetTable<Klient>();
			}
		}
		
		public System.Data.Linq.Table<ModelUstr> ModelUstr
		{
			get
			{
				return this.GetTable<ModelUstr>();
			}
		}
		
		public System.Data.Linq.Table<Rabota> Rabota
		{
			get
			{
				return this.GetTable<Rabota>();
			}
		}
		
		public System.Data.Linq.Table<Sotrudnik> Sotrudnik
		{
			get
			{
				return this.GetTable<Sotrudnik>();
			}
		}
		
		public System.Data.Linq.Table<StatZakaz> StatZakaz
		{
			get
			{
				return this.GetTable<StatZakaz>();
			}
		}
		
		public System.Data.Linq.Table<TipUstr> TipUstr
		{
			get
			{
				return this.GetTable<TipUstr>();
			}
		}
		
		public System.Data.Linq.Table<Zakaz> Zakaz
		{
			get
			{
				return this.GetTable<Zakaz>();
			}
		}
		
		public System.Data.Linq.Table<ZakDet> ZakDet
		{
			get
			{
				return this.GetTable<ZakDet>();
			}
		}
		
		public System.Data.Linq.Table<ZakRab> ZakRab
		{
			get
			{
				return this.GetTable<ZakRab>();
			}
		}
		
		public System.Data.Linq.Table<View_1> View_1
		{
			get
			{
				return this.GetTable<View_1>();
			}
		}
		
		public System.Data.Linq.Table<View_2> View_2
		{
			get
			{
				return this.GetTable<View_2>();
			}
		}
		
		public System.Data.Linq.Table<View_3> View_3
		{
			get
			{
				return this.GetTable<View_3>();
			}
		}
		
		public System.Data.Linq.Table<View_4> View_4
		{
			get
			{
				return this.GetTable<View_4>();
			}
		}
		
		public System.Data.Linq.Table<View_5> View_5
		{
			get
			{
				return this.GetTable<View_5>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detal")]
	public partial class Detal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_det;
		
		private int _id_gdet;
		
		private string _naim_det;
		
		private System.Nullable<int> _col;
		
		private System.Nullable<decimal> _cena;
		
		private string _izg;
		
		private System.Nullable<int> _garant;
		
		private EntitySet<ZakDet> _ZakDet;
		
		private EntityRef<GDetal> _GDetal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_detChanging(int value);
    partial void Onid_detChanged();
    partial void Onid_gdetChanging(int value);
    partial void Onid_gdetChanged();
    partial void Onnaim_detChanging(string value);
    partial void Onnaim_detChanged();
    partial void OncolChanging(System.Nullable<int> value);
    partial void OncolChanged();
    partial void OncenaChanging(System.Nullable<decimal> value);
    partial void OncenaChanged();
    partial void OnizgChanging(string value);
    partial void OnizgChanged();
    partial void OngarantChanging(System.Nullable<int> value);
    partial void OngarantChanged();
    #endregion
		
		public Detal()
		{
			this._ZakDet = new EntitySet<ZakDet>(new Action<ZakDet>(this.attach_ZakDet), new Action<ZakDet>(this.detach_ZakDet));
			this._GDetal = default(EntityRef<GDetal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_det", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_det
		{
			get
			{
				return this._id_det;
			}
			set
			{
				if ((this._id_det != value))
				{
					this.Onid_detChanging(value);
					this.SendPropertyChanging();
					this._id_det = value;
					this.SendPropertyChanged("id_det");
					this.Onid_detChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gdet", DbType="Int NOT NULL")]
		public int id_gdet
		{
			get
			{
				return this._id_gdet;
			}
			set
			{
				if ((this._id_gdet != value))
				{
					if (this._GDetal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_gdetChanging(value);
					this.SendPropertyChanging();
					this._id_gdet = value;
					this.SendPropertyChanged("id_gdet");
					this.Onid_gdetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_det", DbType="VarChar(50)")]
		public string naim_det
		{
			get
			{
				return this._naim_det;
			}
			set
			{
				if ((this._naim_det != value))
				{
					this.Onnaim_detChanging(value);
					this.SendPropertyChanging();
					this._naim_det = value;
					this.SendPropertyChanged("naim_det");
					this.Onnaim_detChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_col", DbType="Int")]
		public System.Nullable<int> col
		{
			get
			{
				return this._col;
			}
			set
			{
				if ((this._col != value))
				{
					this.OncolChanging(value);
					this.SendPropertyChanging();
					this._col = value;
					this.SendPropertyChanged("col");
					this.OncolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cena", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> cena
		{
			get
			{
				return this._cena;
			}
			set
			{
				if ((this._cena != value))
				{
					this.OncenaChanging(value);
					this.SendPropertyChanging();
					this._cena = value;
					this.SendPropertyChanged("cena");
					this.OncenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_izg", DbType="VarChar(50)")]
		public string izg
		{
			get
			{
				return this._izg;
			}
			set
			{
				if ((this._izg != value))
				{
					this.OnizgChanging(value);
					this.SendPropertyChanging();
					this._izg = value;
					this.SendPropertyChanged("izg");
					this.OnizgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_garant", DbType="Int")]
		public System.Nullable<int> garant
		{
			get
			{
				return this._garant;
			}
			set
			{
				if ((this._garant != value))
				{
					this.OngarantChanging(value);
					this.SendPropertyChanging();
					this._garant = value;
					this.SendPropertyChanged("garant");
					this.OngarantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Detal_ZakDet", Storage="_ZakDet", ThisKey="id_det", OtherKey="id_det")]
		public EntitySet<ZakDet> ZakDet
		{
			get
			{
				return this._ZakDet;
			}
			set
			{
				this._ZakDet.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GDetal_Detal", Storage="_GDetal", ThisKey="id_gdet", OtherKey="id_gdet", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GDetal GDetal
		{
			get
			{
				return this._GDetal.Entity;
			}
			set
			{
				GDetal previousValue = this._GDetal.Entity;
				if (((previousValue != value) 
							|| (this._GDetal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GDetal.Entity = null;
						previousValue.Detal.Remove(this);
					}
					this._GDetal.Entity = value;
					if ((value != null))
					{
						value.Detal.Add(this);
						this._id_gdet = value.id_gdet;
					}
					else
					{
						this._id_gdet = default(int);
					}
					this.SendPropertyChanged("GDetal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ZakDet(ZakDet entity)
		{
			this.SendPropertyChanging();
			entity.Detal = this;
		}
		
		private void detach_ZakDet(ZakDet entity)
		{
			this.SendPropertyChanging();
			entity.Detal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GDetal")]
	public partial class GDetal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_gdet;
		
		private string _naim_gdet;
		
		private EntitySet<Detal> _Detal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_gdetChanging(int value);
    partial void Onid_gdetChanged();
    partial void Onnaim_gdetChanging(string value);
    partial void Onnaim_gdetChanged();
    #endregion
		
		public GDetal()
		{
			this._Detal = new EntitySet<Detal>(new Action<Detal>(this.attach_Detal), new Action<Detal>(this.detach_Detal));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gdet", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_gdet
		{
			get
			{
				return this._id_gdet;
			}
			set
			{
				if ((this._id_gdet != value))
				{
					this.Onid_gdetChanging(value);
					this.SendPropertyChanging();
					this._id_gdet = value;
					this.SendPropertyChanged("id_gdet");
					this.Onid_gdetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_gdet", DbType="VarChar(50)")]
		public string naim_gdet
		{
			get
			{
				return this._naim_gdet;
			}
			set
			{
				if ((this._naim_gdet != value))
				{
					this.Onnaim_gdetChanging(value);
					this.SendPropertyChanging();
					this._naim_gdet = value;
					this.SendPropertyChanged("naim_gdet");
					this.Onnaim_gdetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GDetal_Detal", Storage="_Detal", ThisKey="id_gdet", OtherKey="id_gdet")]
		public EntitySet<Detal> Detal
		{
			get
			{
				return this._Detal;
			}
			set
			{
				this._Detal.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detal(Detal entity)
		{
			this.SendPropertyChanging();
			entity.GDetal = this;
		}
		
		private void detach_Detal(Detal entity)
		{
			this.SendPropertyChanging();
			entity.GDetal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klient")]
	public partial class Klient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_kl;
		
		private string _fio_kl;
		
		private string _adres;
		
		private string _tel;
		
		private string _email;
		
		private EntitySet<Zakaz> _Zakaz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_klChanging(int value);
    partial void Onid_klChanged();
    partial void Onfio_klChanging(string value);
    partial void Onfio_klChanged();
    partial void OnadresChanging(string value);
    partial void OnadresChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Klient()
		{
			this._Zakaz = new EntitySet<Zakaz>(new Action<Zakaz>(this.attach_Zakaz), new Action<Zakaz>(this.detach_Zakaz));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kl", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_kl
		{
			get
			{
				return this._id_kl;
			}
			set
			{
				if ((this._id_kl != value))
				{
					this.Onid_klChanging(value);
					this.SendPropertyChanging();
					this._id_kl = value;
					this.SendPropertyChanged("id_kl");
					this.Onid_klChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fio_kl", DbType="VarChar(50)")]
		public string fio_kl
		{
			get
			{
				return this._fio_kl;
			}
			set
			{
				if ((this._fio_kl != value))
				{
					this.Onfio_klChanging(value);
					this.SendPropertyChanging();
					this._fio_kl = value;
					this.SendPropertyChanged("fio_kl");
					this.Onfio_klChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adres", DbType="VarChar(50)")]
		public string adres
		{
			get
			{
				return this._adres;
			}
			set
			{
				if ((this._adres != value))
				{
					this.OnadresChanging(value);
					this.SendPropertyChanging();
					this._adres = value;
					this.SendPropertyChanged("adres");
					this.OnadresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="VarChar(50)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Zakaz", Storage="_Zakaz", ThisKey="id_kl", OtherKey="id_kl")]
		public EntitySet<Zakaz> Zakaz
		{
			get
			{
				return this._Zakaz;
			}
			set
			{
				this._Zakaz.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zakaz(Zakaz entity)
		{
			this.SendPropertyChanging();
			entity.Klient = this;
		}
		
		private void detach_Zakaz(Zakaz entity)
		{
			this.SendPropertyChanging();
			entity.Klient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModelUstr")]
	public partial class ModelUstr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_mu;
		
		private string _naim_mu;
		
		private System.Nullable<int> _id_tu;
		
		private EntitySet<Zakaz> _Zakaz;
		
		private EntityRef<TipUstr> _TipUstr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_muChanging(int value);
    partial void Onid_muChanged();
    partial void Onnaim_muChanging(string value);
    partial void Onnaim_muChanged();
    partial void Onid_tuChanging(System.Nullable<int> value);
    partial void Onid_tuChanged();
    #endregion
		
		public ModelUstr()
		{
			this._Zakaz = new EntitySet<Zakaz>(new Action<Zakaz>(this.attach_Zakaz), new Action<Zakaz>(this.detach_Zakaz));
			this._TipUstr = default(EntityRef<TipUstr>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_mu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_mu
		{
			get
			{
				return this._id_mu;
			}
			set
			{
				if ((this._id_mu != value))
				{
					this.Onid_muChanging(value);
					this.SendPropertyChanging();
					this._id_mu = value;
					this.SendPropertyChanged("id_mu");
					this.Onid_muChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_mu", DbType="VarChar(50)")]
		public string naim_mu
		{
			get
			{
				return this._naim_mu;
			}
			set
			{
				if ((this._naim_mu != value))
				{
					this.Onnaim_muChanging(value);
					this.SendPropertyChanging();
					this._naim_mu = value;
					this.SendPropertyChanged("naim_mu");
					this.Onnaim_muChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tu", DbType="Int")]
		public System.Nullable<int> id_tu
		{
			get
			{
				return this._id_tu;
			}
			set
			{
				if ((this._id_tu != value))
				{
					if (this._TipUstr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tuChanging(value);
					this.SendPropertyChanging();
					this._id_tu = value;
					this.SendPropertyChanged("id_tu");
					this.Onid_tuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModelUstr_Zakaz", Storage="_Zakaz", ThisKey="id_mu", OtherKey="id_mu")]
		public EntitySet<Zakaz> Zakaz
		{
			get
			{
				return this._Zakaz;
			}
			set
			{
				this._Zakaz.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipUstr_ModelUstr", Storage="_TipUstr", ThisKey="id_tu", OtherKey="id_tu", IsForeignKey=true, DeleteRule="CASCADE")]
		public TipUstr TipUstr
		{
			get
			{
				return this._TipUstr.Entity;
			}
			set
			{
				TipUstr previousValue = this._TipUstr.Entity;
				if (((previousValue != value) 
							|| (this._TipUstr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipUstr.Entity = null;
						previousValue.ModelUstr.Remove(this);
					}
					this._TipUstr.Entity = value;
					if ((value != null))
					{
						value.ModelUstr.Add(this);
						this._id_tu = value.id_tu;
					}
					else
					{
						this._id_tu = default(Nullable<int>);
					}
					this.SendPropertyChanged("TipUstr");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zakaz(Zakaz entity)
		{
			this.SendPropertyChanging();
			entity.ModelUstr = this;
		}
		
		private void detach_Zakaz(Zakaz entity)
		{
			this.SendPropertyChanging();
			entity.ModelUstr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rabota")]
	public partial class Rabota : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rab;
		
		private string _naim_rab;
		
		private System.Nullable<decimal> _stoim;
		
		private EntitySet<ZakRab> _ZakRab;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rabChanging(int value);
    partial void Onid_rabChanged();
    partial void Onnaim_rabChanging(string value);
    partial void Onnaim_rabChanged();
    partial void OnstoimChanging(System.Nullable<decimal> value);
    partial void OnstoimChanged();
    #endregion
		
		public Rabota()
		{
			this._ZakRab = new EntitySet<ZakRab>(new Action<ZakRab>(this.attach_ZakRab), new Action<ZakRab>(this.detach_ZakRab));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rab", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_rab
		{
			get
			{
				return this._id_rab;
			}
			set
			{
				if ((this._id_rab != value))
				{
					this.Onid_rabChanging(value);
					this.SendPropertyChanging();
					this._id_rab = value;
					this.SendPropertyChanged("id_rab");
					this.Onid_rabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_rab", DbType="VarChar(50)")]
		public string naim_rab
		{
			get
			{
				return this._naim_rab;
			}
			set
			{
				if ((this._naim_rab != value))
				{
					this.Onnaim_rabChanging(value);
					this.SendPropertyChanging();
					this._naim_rab = value;
					this.SendPropertyChanged("naim_rab");
					this.Onnaim_rabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stoim", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> stoim
		{
			get
			{
				return this._stoim;
			}
			set
			{
				if ((this._stoim != value))
				{
					this.OnstoimChanging(value);
					this.SendPropertyChanging();
					this._stoim = value;
					this.SendPropertyChanged("stoim");
					this.OnstoimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rabota_ZakRab", Storage="_ZakRab", ThisKey="id_rab", OtherKey="id_rab")]
		public EntitySet<ZakRab> ZakRab
		{
			get
			{
				return this._ZakRab;
			}
			set
			{
				this._ZakRab.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ZakRab(ZakRab entity)
		{
			this.SendPropertyChanging();
			entity.Rabota = this;
		}
		
		private void detach_ZakRab(ZakRab entity)
		{
			this.SendPropertyChanging();
			entity.Rabota = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sotrudnik")]
	public partial class Sotrudnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_sotr;
		
		private string _fio_sotr;
		
		private string _login;
		
		private string _pass;
		
		private string _dost;
		
		private EntitySet<Zakaz> _Zakaz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_sotrChanging(int value);
    partial void Onid_sotrChanged();
    partial void Onfio_sotrChanging(string value);
    partial void Onfio_sotrChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OndostChanging(string value);
    partial void OndostChanged();
    #endregion
		
		public Sotrudnik()
		{
			this._Zakaz = new EntitySet<Zakaz>(new Action<Zakaz>(this.attach_Zakaz), new Action<Zakaz>(this.detach_Zakaz));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sotr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_sotr
		{
			get
			{
				return this._id_sotr;
			}
			set
			{
				if ((this._id_sotr != value))
				{
					this.Onid_sotrChanging(value);
					this.SendPropertyChanging();
					this._id_sotr = value;
					this.SendPropertyChanged("id_sotr");
					this.Onid_sotrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fio_sotr", DbType="VarChar(50)")]
		public string fio_sotr
		{
			get
			{
				return this._fio_sotr;
			}
			set
			{
				if ((this._fio_sotr != value))
				{
					this.Onfio_sotrChanging(value);
					this.SendPropertyChanging();
					this._fio_sotr = value;
					this.SendPropertyChanged("fio_sotr");
					this.Onfio_sotrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(10)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(10)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dost", DbType="VarChar(20)")]
		public string dost
		{
			get
			{
				return this._dost;
			}
			set
			{
				if ((this._dost != value))
				{
					this.OndostChanging(value);
					this.SendPropertyChanging();
					this._dost = value;
					this.SendPropertyChanged("dost");
					this.OndostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sotrudnik_Zakaz", Storage="_Zakaz", ThisKey="id_sotr", OtherKey="id_sotr")]
		public EntitySet<Zakaz> Zakaz
		{
			get
			{
				return this._Zakaz;
			}
			set
			{
				this._Zakaz.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zakaz(Zakaz entity)
		{
			this.SendPropertyChanging();
			entity.Sotrudnik = this;
		}
		
		private void detach_Zakaz(Zakaz entity)
		{
			this.SendPropertyChanging();
			entity.Sotrudnik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatZakaz")]
	public partial class StatZakaz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_sz;
		
		private string _naim_sz;
		
		private EntitySet<Zakaz> _Zakaz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_szChanging(int value);
    partial void Onid_szChanged();
    partial void Onnaim_szChanging(string value);
    partial void Onnaim_szChanged();
    #endregion
		
		public StatZakaz()
		{
			this._Zakaz = new EntitySet<Zakaz>(new Action<Zakaz>(this.attach_Zakaz), new Action<Zakaz>(this.detach_Zakaz));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sz", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_sz
		{
			get
			{
				return this._id_sz;
			}
			set
			{
				if ((this._id_sz != value))
				{
					this.Onid_szChanging(value);
					this.SendPropertyChanging();
					this._id_sz = value;
					this.SendPropertyChanged("id_sz");
					this.Onid_szChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_sz", DbType="VarChar(50)")]
		public string naim_sz
		{
			get
			{
				return this._naim_sz;
			}
			set
			{
				if ((this._naim_sz != value))
				{
					this.Onnaim_szChanging(value);
					this.SendPropertyChanging();
					this._naim_sz = value;
					this.SendPropertyChanged("naim_sz");
					this.Onnaim_szChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatZakaz_Zakaz", Storage="_Zakaz", ThisKey="id_sz", OtherKey="id_sz")]
		public EntitySet<Zakaz> Zakaz
		{
			get
			{
				return this._Zakaz;
			}
			set
			{
				this._Zakaz.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zakaz(Zakaz entity)
		{
			this.SendPropertyChanging();
			entity.StatZakaz = this;
		}
		
		private void detach_Zakaz(Zakaz entity)
		{
			this.SendPropertyChanging();
			entity.StatZakaz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipUstr")]
	public partial class TipUstr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_tu;
		
		private string _naim_tu;
		
		private EntitySet<ModelUstr> _ModelUstr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tuChanging(int value);
    partial void Onid_tuChanged();
    partial void Onnaim_tuChanging(string value);
    partial void Onnaim_tuChanged();
    #endregion
		
		public TipUstr()
		{
			this._ModelUstr = new EntitySet<ModelUstr>(new Action<ModelUstr>(this.attach_ModelUstr), new Action<ModelUstr>(this.detach_ModelUstr));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_tu
		{
			get
			{
				return this._id_tu;
			}
			set
			{
				if ((this._id_tu != value))
				{
					this.Onid_tuChanging(value);
					this.SendPropertyChanging();
					this._id_tu = value;
					this.SendPropertyChanged("id_tu");
					this.Onid_tuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_tu", DbType="VarChar(50)")]
		public string naim_tu
		{
			get
			{
				return this._naim_tu;
			}
			set
			{
				if ((this._naim_tu != value))
				{
					this.Onnaim_tuChanging(value);
					this.SendPropertyChanging();
					this._naim_tu = value;
					this.SendPropertyChanged("naim_tu");
					this.Onnaim_tuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipUstr_ModelUstr", Storage="_ModelUstr", ThisKey="id_tu", OtherKey="id_tu")]
		public EntitySet<ModelUstr> ModelUstr
		{
			get
			{
				return this._ModelUstr;
			}
			set
			{
				this._ModelUstr.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ModelUstr(ModelUstr entity)
		{
			this.SendPropertyChanging();
			entity.TipUstr = this;
		}
		
		private void detach_ModelUstr(ModelUstr entity)
		{
			this.SendPropertyChanging();
			entity.TipUstr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zakaz")]
	public partial class Zakaz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_zak;
		
		private string _ser;
		
		private System.Nullable<int> _id_mu;
		
		private System.Nullable<int> _id_kl;
		
		private System.Nullable<int> _id_sz;
		
		private System.Nullable<System.DateTime> _date_p;
		
		private System.Nullable<System.DateTime> _date_v;
		
		private System.Nullable<decimal> _stoim_det;
		
		private System.Nullable<decimal> _stoim_rab;
		
		private System.Nullable<int> _skidka;
		
		private System.Nullable<decimal> _ob_stoim;
		
		private System.Nullable<bool> _oplata;
		
		private System.Nullable<int> _id_sotr;
		
		private string _neispr;
		
		private string _kompl;
		
		private string _prim;
		
		private EntitySet<ZakDet> _ZakDet;
		
		private EntitySet<ZakRab> _ZakRab;
		
		private EntityRef<Klient> _Klient;
		
		private EntityRef<ModelUstr> _ModelUstr;
		
		private EntityRef<Sotrudnik> _Sotrudnik;
		
		private EntityRef<StatZakaz> _StatZakaz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_zakChanging(int value);
    partial void Onid_zakChanged();
    partial void OnserChanging(string value);
    partial void OnserChanged();
    partial void Onid_muChanging(System.Nullable<int> value);
    partial void Onid_muChanged();
    partial void Onid_klChanging(System.Nullable<int> value);
    partial void Onid_klChanged();
    partial void Onid_szChanging(System.Nullable<int> value);
    partial void Onid_szChanged();
    partial void Ondate_pChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_pChanged();
    partial void Ondate_vChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_vChanged();
    partial void Onstoim_detChanging(System.Nullable<decimal> value);
    partial void Onstoim_detChanged();
    partial void Onstoim_rabChanging(System.Nullable<decimal> value);
    partial void Onstoim_rabChanged();
    partial void OnskidkaChanging(System.Nullable<int> value);
    partial void OnskidkaChanged();
    partial void Onob_stoimChanging(System.Nullable<decimal> value);
    partial void Onob_stoimChanged();
    partial void OnoplataChanging(System.Nullable<bool> value);
    partial void OnoplataChanged();
    partial void Onid_sotrChanging(System.Nullable<int> value);
    partial void Onid_sotrChanged();
    partial void OnneisprChanging(string value);
    partial void OnneisprChanged();
    partial void OnkomplChanging(string value);
    partial void OnkomplChanged();
    partial void OnprimChanging(string value);
    partial void OnprimChanged();
    #endregion
		
		public Zakaz()
		{
			this._ZakDet = new EntitySet<ZakDet>(new Action<ZakDet>(this.attach_ZakDet), new Action<ZakDet>(this.detach_ZakDet));
			this._ZakRab = new EntitySet<ZakRab>(new Action<ZakRab>(this.attach_ZakRab), new Action<ZakRab>(this.detach_ZakRab));
			this._Klient = default(EntityRef<Klient>);
			this._ModelUstr = default(EntityRef<ModelUstr>);
			this._Sotrudnik = default(EntityRef<Sotrudnik>);
			this._StatZakaz = default(EntityRef<StatZakaz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zak", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_zak
		{
			get
			{
				return this._id_zak;
			}
			set
			{
				if ((this._id_zak != value))
				{
					this.Onid_zakChanging(value);
					this.SendPropertyChanging();
					this._id_zak = value;
					this.SendPropertyChanged("id_zak");
					this.Onid_zakChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ser", DbType="VarChar(50)")]
		public string ser
		{
			get
			{
				return this._ser;
			}
			set
			{
				if ((this._ser != value))
				{
					this.OnserChanging(value);
					this.SendPropertyChanging();
					this._ser = value;
					this.SendPropertyChanged("ser");
					this.OnserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_mu", DbType="Int")]
		public System.Nullable<int> id_mu
		{
			get
			{
				return this._id_mu;
			}
			set
			{
				if ((this._id_mu != value))
				{
					if (this._ModelUstr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_muChanging(value);
					this.SendPropertyChanging();
					this._id_mu = value;
					this.SendPropertyChanged("id_mu");
					this.Onid_muChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kl", DbType="Int")]
		public System.Nullable<int> id_kl
		{
			get
			{
				return this._id_kl;
			}
			set
			{
				if ((this._id_kl != value))
				{
					if (this._Klient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_klChanging(value);
					this.SendPropertyChanging();
					this._id_kl = value;
					this.SendPropertyChanged("id_kl");
					this.Onid_klChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sz", DbType="Int")]
		public System.Nullable<int> id_sz
		{
			get
			{
				return this._id_sz;
			}
			set
			{
				if ((this._id_sz != value))
				{
					if (this._StatZakaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_szChanging(value);
					this.SendPropertyChanging();
					this._id_sz = value;
					this.SendPropertyChanged("id_sz");
					this.Onid_szChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_p", DbType="Date")]
		public System.Nullable<System.DateTime> date_p
		{
			get
			{
				return this._date_p;
			}
			set
			{
				if ((this._date_p != value))
				{
					this.Ondate_pChanging(value);
					this.SendPropertyChanging();
					this._date_p = value;
					this.SendPropertyChanged("date_p");
					this.Ondate_pChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_v", DbType="Date")]
		public System.Nullable<System.DateTime> date_v
		{
			get
			{
				return this._date_v;
			}
			set
			{
				if ((this._date_v != value))
				{
					this.Ondate_vChanging(value);
					this.SendPropertyChanging();
					this._date_v = value;
					this.SendPropertyChanged("date_v");
					this.Ondate_vChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stoim_det", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> stoim_det
		{
			get
			{
				return this._stoim_det;
			}
			set
			{
				if ((this._stoim_det != value))
				{
					this.Onstoim_detChanging(value);
					this.SendPropertyChanging();
					this._stoim_det = value;
					this.SendPropertyChanged("stoim_det");
					this.Onstoim_detChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stoim_rab", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> stoim_rab
		{
			get
			{
				return this._stoim_rab;
			}
			set
			{
				if ((this._stoim_rab != value))
				{
					this.Onstoim_rabChanging(value);
					this.SendPropertyChanging();
					this._stoim_rab = value;
					this.SendPropertyChanged("stoim_rab");
					this.Onstoim_rabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skidka", DbType="Int")]
		public System.Nullable<int> skidka
		{
			get
			{
				return this._skidka;
			}
			set
			{
				if ((this._skidka != value))
				{
					this.OnskidkaChanging(value);
					this.SendPropertyChanging();
					this._skidka = value;
					this.SendPropertyChanged("skidka");
					this.OnskidkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ob_stoim", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ob_stoim
		{
			get
			{
				return this._ob_stoim;
			}
			set
			{
				if ((this._ob_stoim != value))
				{
					this.Onob_stoimChanging(value);
					this.SendPropertyChanging();
					this._ob_stoim = value;
					this.SendPropertyChanged("ob_stoim");
					this.Onob_stoimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oplata", DbType="Bit")]
		public System.Nullable<bool> oplata
		{
			get
			{
				return this._oplata;
			}
			set
			{
				if ((this._oplata != value))
				{
					this.OnoplataChanging(value);
					this.SendPropertyChanging();
					this._oplata = value;
					this.SendPropertyChanged("oplata");
					this.OnoplataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sotr", DbType="Int")]
		public System.Nullable<int> id_sotr
		{
			get
			{
				return this._id_sotr;
			}
			set
			{
				if ((this._id_sotr != value))
				{
					if (this._Sotrudnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_sotrChanging(value);
					this.SendPropertyChanging();
					this._id_sotr = value;
					this.SendPropertyChanged("id_sotr");
					this.Onid_sotrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_neispr", DbType="VarChar(MAX)")]
		public string neispr
		{
			get
			{
				return this._neispr;
			}
			set
			{
				if ((this._neispr != value))
				{
					this.OnneisprChanging(value);
					this.SendPropertyChanging();
					this._neispr = value;
					this.SendPropertyChanged("neispr");
					this.OnneisprChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kompl", DbType="VarChar(MAX)")]
		public string kompl
		{
			get
			{
				return this._kompl;
			}
			set
			{
				if ((this._kompl != value))
				{
					this.OnkomplChanging(value);
					this.SendPropertyChanging();
					this._kompl = value;
					this.SendPropertyChanged("kompl");
					this.OnkomplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prim", DbType="VarChar(MAX)")]
		public string prim
		{
			get
			{
				return this._prim;
			}
			set
			{
				if ((this._prim != value))
				{
					this.OnprimChanging(value);
					this.SendPropertyChanging();
					this._prim = value;
					this.SendPropertyChanged("prim");
					this.OnprimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zakaz_ZakDet", Storage="_ZakDet", ThisKey="id_zak", OtherKey="id_zak")]
		public EntitySet<ZakDet> ZakDet
		{
			get
			{
				return this._ZakDet;
			}
			set
			{
				this._ZakDet.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zakaz_ZakRab", Storage="_ZakRab", ThisKey="id_zak", OtherKey="id_zak")]
		public EntitySet<ZakRab> ZakRab
		{
			get
			{
				return this._ZakRab;
			}
			set
			{
				this._ZakRab.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Zakaz", Storage="_Klient", ThisKey="id_kl", OtherKey="id_kl", IsForeignKey=true, DeleteRule="CASCADE")]
		public Klient Klient
		{
			get
			{
				return this._Klient.Entity;
			}
			set
			{
				Klient previousValue = this._Klient.Entity;
				if (((previousValue != value) 
							|| (this._Klient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klient.Entity = null;
						previousValue.Zakaz.Remove(this);
					}
					this._Klient.Entity = value;
					if ((value != null))
					{
						value.Zakaz.Add(this);
						this._id_kl = value.id_kl;
					}
					else
					{
						this._id_kl = default(Nullable<int>);
					}
					this.SendPropertyChanged("Klient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModelUstr_Zakaz", Storage="_ModelUstr", ThisKey="id_mu", OtherKey="id_mu", IsForeignKey=true, DeleteRule="CASCADE")]
		public ModelUstr ModelUstr
		{
			get
			{
				return this._ModelUstr.Entity;
			}
			set
			{
				ModelUstr previousValue = this._ModelUstr.Entity;
				if (((previousValue != value) 
							|| (this._ModelUstr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ModelUstr.Entity = null;
						previousValue.Zakaz.Remove(this);
					}
					this._ModelUstr.Entity = value;
					if ((value != null))
					{
						value.Zakaz.Add(this);
						this._id_mu = value.id_mu;
					}
					else
					{
						this._id_mu = default(Nullable<int>);
					}
					this.SendPropertyChanged("ModelUstr");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sotrudnik_Zakaz", Storage="_Sotrudnik", ThisKey="id_sotr", OtherKey="id_sotr", IsForeignKey=true, DeleteRule="CASCADE")]
		public Sotrudnik Sotrudnik
		{
			get
			{
				return this._Sotrudnik.Entity;
			}
			set
			{
				Sotrudnik previousValue = this._Sotrudnik.Entity;
				if (((previousValue != value) 
							|| (this._Sotrudnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sotrudnik.Entity = null;
						previousValue.Zakaz.Remove(this);
					}
					this._Sotrudnik.Entity = value;
					if ((value != null))
					{
						value.Zakaz.Add(this);
						this._id_sotr = value.id_sotr;
					}
					else
					{
						this._id_sotr = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sotrudnik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatZakaz_Zakaz", Storage="_StatZakaz", ThisKey="id_sz", OtherKey="id_sz", IsForeignKey=true, DeleteRule="CASCADE")]
		public StatZakaz StatZakaz
		{
			get
			{
				return this._StatZakaz.Entity;
			}
			set
			{
				StatZakaz previousValue = this._StatZakaz.Entity;
				if (((previousValue != value) 
							|| (this._StatZakaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatZakaz.Entity = null;
						previousValue.Zakaz.Remove(this);
					}
					this._StatZakaz.Entity = value;
					if ((value != null))
					{
						value.Zakaz.Add(this);
						this._id_sz = value.id_sz;
					}
					else
					{
						this._id_sz = default(Nullable<int>);
					}
					this.SendPropertyChanged("StatZakaz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ZakDet(ZakDet entity)
		{
			this.SendPropertyChanging();
			entity.Zakaz = this;
		}
		
		private void detach_ZakDet(ZakDet entity)
		{
			this.SendPropertyChanging();
			entity.Zakaz = null;
		}
		
		private void attach_ZakRab(ZakRab entity)
		{
			this.SendPropertyChanging();
			entity.Zakaz = this;
		}
		
		private void detach_ZakRab(ZakRab entity)
		{
			this.SendPropertyChanging();
			entity.Zakaz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZakDet")]
	public partial class ZakDet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_zd;
		
		private System.Nullable<int> _id_zak;
		
		private System.Nullable<int> _id_det;
		
		private System.Nullable<int> _col;
		
		private EntityRef<Detal> _Detal;
		
		private EntityRef<Zakaz> _Zakaz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_zdChanging(int value);
    partial void Onid_zdChanged();
    partial void Onid_zakChanging(System.Nullable<int> value);
    partial void Onid_zakChanged();
    partial void Onid_detChanging(System.Nullable<int> value);
    partial void Onid_detChanged();
    partial void OncolChanging(System.Nullable<int> value);
    partial void OncolChanged();
    #endregion
		
		public ZakDet()
		{
			this._Detal = default(EntityRef<Detal>);
			this._Zakaz = default(EntityRef<Zakaz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zd", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_zd
		{
			get
			{
				return this._id_zd;
			}
			set
			{
				if ((this._id_zd != value))
				{
					this.Onid_zdChanging(value);
					this.SendPropertyChanging();
					this._id_zd = value;
					this.SendPropertyChanged("id_zd");
					this.Onid_zdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zak", DbType="Int")]
		public System.Nullable<int> id_zak
		{
			get
			{
				return this._id_zak;
			}
			set
			{
				if ((this._id_zak != value))
				{
					if (this._Zakaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zakChanging(value);
					this.SendPropertyChanging();
					this._id_zak = value;
					this.SendPropertyChanged("id_zak");
					this.Onid_zakChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_det", DbType="Int")]
		public System.Nullable<int> id_det
		{
			get
			{
				return this._id_det;
			}
			set
			{
				if ((this._id_det != value))
				{
					if (this._Detal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_detChanging(value);
					this.SendPropertyChanging();
					this._id_det = value;
					this.SendPropertyChanged("id_det");
					this.Onid_detChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_col", DbType="Int")]
		public System.Nullable<int> col
		{
			get
			{
				return this._col;
			}
			set
			{
				if ((this._col != value))
				{
					this.OncolChanging(value);
					this.SendPropertyChanging();
					this._col = value;
					this.SendPropertyChanged("col");
					this.OncolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Detal_ZakDet", Storage="_Detal", ThisKey="id_det", OtherKey="id_det", IsForeignKey=true, DeleteRule="CASCADE")]
		public Detal Detal
		{
			get
			{
				return this._Detal.Entity;
			}
			set
			{
				Detal previousValue = this._Detal.Entity;
				if (((previousValue != value) 
							|| (this._Detal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Detal.Entity = null;
						previousValue.ZakDet.Remove(this);
					}
					this._Detal.Entity = value;
					if ((value != null))
					{
						value.ZakDet.Add(this);
						this._id_det = value.id_det;
					}
					else
					{
						this._id_det = default(Nullable<int>);
					}
					this.SendPropertyChanged("Detal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zakaz_ZakDet", Storage="_Zakaz", ThisKey="id_zak", OtherKey="id_zak", IsForeignKey=true, DeleteRule="CASCADE")]
		public Zakaz Zakaz
		{
			get
			{
				return this._Zakaz.Entity;
			}
			set
			{
				Zakaz previousValue = this._Zakaz.Entity;
				if (((previousValue != value) 
							|| (this._Zakaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zakaz.Entity = null;
						previousValue.ZakDet.Remove(this);
					}
					this._Zakaz.Entity = value;
					if ((value != null))
					{
						value.ZakDet.Add(this);
						this._id_zak = value.id_zak;
					}
					else
					{
						this._id_zak = default(Nullable<int>);
					}
					this.SendPropertyChanged("Zakaz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZakRab")]
	public partial class ZakRab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_zr;
		
		private System.Nullable<int> _id_zak;
		
		private System.Nullable<int> _id_rab;
		
		private EntityRef<Rabota> _Rabota;
		
		private EntityRef<Zakaz> _Zakaz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_zrChanging(int value);
    partial void Onid_zrChanged();
    partial void Onid_zakChanging(System.Nullable<int> value);
    partial void Onid_zakChanged();
    partial void Onid_rabChanging(System.Nullable<int> value);
    partial void Onid_rabChanged();
    #endregion
		
		public ZakRab()
		{
			this._Rabota = default(EntityRef<Rabota>);
			this._Zakaz = default(EntityRef<Zakaz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_zr
		{
			get
			{
				return this._id_zr;
			}
			set
			{
				if ((this._id_zr != value))
				{
					this.Onid_zrChanging(value);
					this.SendPropertyChanging();
					this._id_zr = value;
					this.SendPropertyChanged("id_zr");
					this.Onid_zrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zak", DbType="Int")]
		public System.Nullable<int> id_zak
		{
			get
			{
				return this._id_zak;
			}
			set
			{
				if ((this._id_zak != value))
				{
					if (this._Zakaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zakChanging(value);
					this.SendPropertyChanging();
					this._id_zak = value;
					this.SendPropertyChanged("id_zak");
					this.Onid_zakChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rab", DbType="Int")]
		public System.Nullable<int> id_rab
		{
			get
			{
				return this._id_rab;
			}
			set
			{
				if ((this._id_rab != value))
				{
					if (this._Rabota.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rabChanging(value);
					this.SendPropertyChanging();
					this._id_rab = value;
					this.SendPropertyChanged("id_rab");
					this.Onid_rabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rabota_ZakRab", Storage="_Rabota", ThisKey="id_rab", OtherKey="id_rab", IsForeignKey=true, DeleteRule="CASCADE")]
		public Rabota Rabota
		{
			get
			{
				return this._Rabota.Entity;
			}
			set
			{
				Rabota previousValue = this._Rabota.Entity;
				if (((previousValue != value) 
							|| (this._Rabota.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rabota.Entity = null;
						previousValue.ZakRab.Remove(this);
					}
					this._Rabota.Entity = value;
					if ((value != null))
					{
						value.ZakRab.Add(this);
						this._id_rab = value.id_rab;
					}
					else
					{
						this._id_rab = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rabota");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zakaz_ZakRab", Storage="_Zakaz", ThisKey="id_zak", OtherKey="id_zak", IsForeignKey=true, DeleteRule="CASCADE")]
		public Zakaz Zakaz
		{
			get
			{
				return this._Zakaz.Entity;
			}
			set
			{
				Zakaz previousValue = this._Zakaz.Entity;
				if (((previousValue != value) 
							|| (this._Zakaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zakaz.Entity = null;
						previousValue.ZakRab.Remove(this);
					}
					this._Zakaz.Entity = value;
					if ((value != null))
					{
						value.ZakRab.Add(this);
						this._id_zak = value.id_zak;
					}
					else
					{
						this._id_zak = default(Nullable<int>);
					}
					this.SendPropertyChanged("Zakaz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_1")]
	public partial class View_1
	{
		
		private int _id_det;
		
		private string _naim_det;
		
		private string _naim_gdet;
		
		private System.Nullable<int> _col;
		
		private System.Nullable<decimal> _cena;
		
		private string _izg;
		
		private System.Nullable<int> _garant;
		
		public View_1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_det", DbType="Int NOT NULL")]
		public int id_det
		{
			get
			{
				return this._id_det;
			}
			set
			{
				if ((this._id_det != value))
				{
					this._id_det = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_det", DbType="VarChar(50)")]
		public string naim_det
		{
			get
			{
				return this._naim_det;
			}
			set
			{
				if ((this._naim_det != value))
				{
					this._naim_det = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_gdet", DbType="VarChar(50)")]
		public string naim_gdet
		{
			get
			{
				return this._naim_gdet;
			}
			set
			{
				if ((this._naim_gdet != value))
				{
					this._naim_gdet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_col", DbType="Int")]
		public System.Nullable<int> col
		{
			get
			{
				return this._col;
			}
			set
			{
				if ((this._col != value))
				{
					this._col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cena", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> cena
		{
			get
			{
				return this._cena;
			}
			set
			{
				if ((this._cena != value))
				{
					this._cena = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_izg", DbType="VarChar(50)")]
		public string izg
		{
			get
			{
				return this._izg;
			}
			set
			{
				if ((this._izg != value))
				{
					this._izg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_garant", DbType="Int")]
		public System.Nullable<int> garant
		{
			get
			{
				return this._garant;
			}
			set
			{
				if ((this._garant != value))
				{
					this._garant = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_2")]
	public partial class View_2
	{
		
		private int _id_zd;
		
		private System.Nullable<int> _id_zak;
		
		private string _naim_det;
		
		private System.Nullable<int> _col;
		
		private System.Nullable<decimal> _cena;
		
		public View_2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zd", DbType="Int NOT NULL")]
		public int id_zd
		{
			get
			{
				return this._id_zd;
			}
			set
			{
				if ((this._id_zd != value))
				{
					this._id_zd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zak", DbType="Int")]
		public System.Nullable<int> id_zak
		{
			get
			{
				return this._id_zak;
			}
			set
			{
				if ((this._id_zak != value))
				{
					this._id_zak = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_det", DbType="VarChar(50)")]
		public string naim_det
		{
			get
			{
				return this._naim_det;
			}
			set
			{
				if ((this._naim_det != value))
				{
					this._naim_det = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_col", DbType="Int")]
		public System.Nullable<int> col
		{
			get
			{
				return this._col;
			}
			set
			{
				if ((this._col != value))
				{
					this._col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cena", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> cena
		{
			get
			{
				return this._cena;
			}
			set
			{
				if ((this._cena != value))
				{
					this._cena = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_3")]
	public partial class View_3
	{
		
		private int _id_zr;
		
		private System.Nullable<int> _id_zak;
		
		private string _naim_rab;
		
		private System.Nullable<decimal> _stoim;
		
		public View_3()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zr", DbType="Int NOT NULL")]
		public int id_zr
		{
			get
			{
				return this._id_zr;
			}
			set
			{
				if ((this._id_zr != value))
				{
					this._id_zr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zak", DbType="Int")]
		public System.Nullable<int> id_zak
		{
			get
			{
				return this._id_zak;
			}
			set
			{
				if ((this._id_zak != value))
				{
					this._id_zak = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_rab", DbType="VarChar(50)")]
		public string naim_rab
		{
			get
			{
				return this._naim_rab;
			}
			set
			{
				if ((this._naim_rab != value))
				{
					this._naim_rab = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stoim", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> stoim
		{
			get
			{
				return this._stoim;
			}
			set
			{
				if ((this._stoim != value))
				{
					this._stoim = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_4")]
	public partial class View_4
	{
		
		private int _id_zak;
		
		private string _ser;
		
		private string _naim_tu;
		
		private string _naim_mu;
		
		private string _fio_kl;
		
		private string _fio_sotr;
		
		private System.Nullable<System.DateTime> _date_p;
		
		private System.Nullable<System.DateTime> _date_v;
		
		private System.Nullable<decimal> _stoim_det;
		
		private System.Nullable<decimal> _stoim_rab;
		
		private System.Nullable<int> _skidka;
		
		private System.Nullable<decimal> _ob_stoim;
		
		private System.Nullable<bool> _oplata;
		
		private string _naim_sz;
		
		public View_4()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zak", DbType="Int NOT NULL")]
		public int id_zak
		{
			get
			{
				return this._id_zak;
			}
			set
			{
				if ((this._id_zak != value))
				{
					this._id_zak = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ser", DbType="VarChar(50)")]
		public string ser
		{
			get
			{
				return this._ser;
			}
			set
			{
				if ((this._ser != value))
				{
					this._ser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_tu", DbType="VarChar(50)")]
		public string naim_tu
		{
			get
			{
				return this._naim_tu;
			}
			set
			{
				if ((this._naim_tu != value))
				{
					this._naim_tu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_mu", DbType="VarChar(50)")]
		public string naim_mu
		{
			get
			{
				return this._naim_mu;
			}
			set
			{
				if ((this._naim_mu != value))
				{
					this._naim_mu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fio_kl", DbType="VarChar(50)")]
		public string fio_kl
		{
			get
			{
				return this._fio_kl;
			}
			set
			{
				if ((this._fio_kl != value))
				{
					this._fio_kl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fio_sotr", DbType="VarChar(50)")]
		public string fio_sotr
		{
			get
			{
				return this._fio_sotr;
			}
			set
			{
				if ((this._fio_sotr != value))
				{
					this._fio_sotr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_p", DbType="Date")]
		public System.Nullable<System.DateTime> date_p
		{
			get
			{
				return this._date_p;
			}
			set
			{
				if ((this._date_p != value))
				{
					this._date_p = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_v", DbType="Date")]
		public System.Nullable<System.DateTime> date_v
		{
			get
			{
				return this._date_v;
			}
			set
			{
				if ((this._date_v != value))
				{
					this._date_v = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stoim_det", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> stoim_det
		{
			get
			{
				return this._stoim_det;
			}
			set
			{
				if ((this._stoim_det != value))
				{
					this._stoim_det = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stoim_rab", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> stoim_rab
		{
			get
			{
				return this._stoim_rab;
			}
			set
			{
				if ((this._stoim_rab != value))
				{
					this._stoim_rab = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skidka", DbType="Int")]
		public System.Nullable<int> skidka
		{
			get
			{
				return this._skidka;
			}
			set
			{
				if ((this._skidka != value))
				{
					this._skidka = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ob_stoim", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ob_stoim
		{
			get
			{
				return this._ob_stoim;
			}
			set
			{
				if ((this._ob_stoim != value))
				{
					this._ob_stoim = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oplata", DbType="Bit")]
		public System.Nullable<bool> oplata
		{
			get
			{
				return this._oplata;
			}
			set
			{
				if ((this._oplata != value))
				{
					this._oplata = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_sz", DbType="VarChar(50)")]
		public string naim_sz
		{
			get
			{
				return this._naim_sz;
			}
			set
			{
				if ((this._naim_sz != value))
				{
					this._naim_sz = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_5")]
	public partial class View_5
	{
		
		private int _id_mu;
		
		private string _naim_mu;
		
		private string _naim_tu;
		
		public View_5()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_mu", DbType="Int NOT NULL")]
		public int id_mu
		{
			get
			{
				return this._id_mu;
			}
			set
			{
				if ((this._id_mu != value))
				{
					this._id_mu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_mu", DbType="VarChar(50)")]
		public string naim_mu
		{
			get
			{
				return this._naim_mu;
			}
			set
			{
				if ((this._naim_mu != value))
				{
					this._naim_mu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naim_tu", DbType="VarChar(50)")]
		public string naim_tu
		{
			get
			{
				return this._naim_tu;
			}
			set
			{
				if ((this._naim_tu != value))
				{
					this._naim_tu = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
